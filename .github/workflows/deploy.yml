name: build-deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted   # use your self-hosted runner

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Docker login (with GitHub Secrets)
      - name: Docker Login
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          echo "âœ… Docker login successful"

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          IMAGE="${{ secrets.DOCKER_USERNAME }}/my-nginx:latest"
          echo "Building image: $IMAGE"
          docker build -t $IMAGE .

      # Step 4: Push Docker image
      - name: Push Docker image
        run: |
          IMAGE="${{ secrets.DOCKER_USERNAME }}/my-nginx:latest"
          echo "Pushing image: $IMAGE"
          docker push $IMAGE

      # Step 5: Update Kubernetes deployment to use latest image
      - name: Deploy to Kubernetes
        run: |
          IMAGE="${{ secrets.DOCKER_USERNAME }}/my-nginx:latest"
          echo "Deploying with image: $IMAGE"

          # replace image in deployment.yaml automatically
          sed -i "s|image: .*|image: $IMAGE|" k8s/deployment.yaml

          # apply configs
          kubectl apply -f k8s/

      # Step 6: Verify rollout
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/my-nginx
          kubectl get pods -o wide
          echo "ðŸš€ Deployment finished successfully!"

